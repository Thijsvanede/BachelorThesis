@ARTICLE{vanDijk2014206,
	author={van Dijk, T. and van de Pol, J.C.},
	title={Lace: Non-blocking Split Deque for Work-Stealing},
	journal={Lecture Notes in Computer Science},
	year={2014},
	volume={8806},
	pages={206-217},
	url={http://www.scopus.com/inward/record.url?eid=2-s2.0-84920082521&partnerID=40&md5=19aa5351a10f69c0acc46b004978582f},
	doi={10.1007/978-3-319-14313-2_18};
	document_type={Conference Paper},
	source={Scopus},
}

@ARTICLE{herlihy1990,
  author={Herlihy, M.P. and Wing, J.M.},
  title={Linearizability: A correctness condition for concurrent objects},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  year={1990},
  volume={12},
  number={3},
  pages={463-492},
  publisher={ACM}
}

@inproceedings{reynolds2002,
  title={Separation logic: A logic for shared mutable data structures},
  author={Reynolds, John C},
  booktitle={Logic in Computer Science, 2002. Proceedings. 17th Annual IEEE Symposium on},
  pages={55--74},
  year={2002},
  organization={IEEE}
}

@book{smullyan1995,
  title={First-order logic},
  author={Smullyan, Raymond M},
  year={1995},
  publisher={Courier Corporation}
}

@misc{coq2015,
  title = {The Coq Proof Assistant},
  howpublished = {https://coq.inria.fr/what-is-coq},
  note = {Accessed: 2015-03-29}
}

@book{paulson1994isabelle,
  title={Isabelle: A generic theorem prover},
  author={Paulson, Lawrence C},
  volume={828},
  year={1994},
  publisher={Springer Science \& Business Media}
}

@incollection{owre1992pvs,
  title={PVS: A prototype verification system},
  author={Owre, S. and Rushby, J. M. and Shankar, N.},
  booktitle={Automated Deduction - CADE-11},
  pages={748--752},
  year={1992},
  publisher={Springer}
}

@article{badban2005verification,
  title={Verification of a sliding window protocol in $\mu$CRL and PVS},
  author={Badban, B. and Fokkink, W. and Groote, J.F. and Pang, J. and van de Pol, J.},
  journal={Formal Aspects of Computing},
  volume={17},
  number={3},
  pages={342--388},
  year={2005},
  publisher={Springer}
}

@inproceedings{shankar1993verification,
  title={Verification of real-time systems using PVS},
  author={Shankar, N.},
  booktitle={Computer Aided Verification},
  pages={280--291},
  year={1993},
  organization={Springer}
}

@inproceedings{colvin2006formal,
  title={Formal verification of a lazy concurrent list-based set algorithm},
  author={Colvin, R. and Groves, L. and Luchangco, V. and Moir, M.},
  booktitle={Computer Aided Verification},
  pages={475--488},
  year={2006},
  organization={Springer}
}

@ARTICLE{Blumofe1994,
	author={Blumofe, R.D and Leiserson, C. E.},
	title={Scheduling multithreaded computations by work stealing},
	journal={Journal of the AMC (JAMC)},
	year={1994},
	volume={46},
	number={5},
	pages={720--748},
	publisher={AMC},
	doi={10.1145/324133.324234},
	document_type={Article},
}

@incollection{eemcs24905,
          eprintid = {24905},
             month = {June},
      official_url = {http://dx.doi.org/10.1007/978-3-319-07317-0_5},
              issn = {0302-9743},
            author = {A. {Amighi} and S. C. C. {Blom} and S. {Darabi} and M. {Huisman} and W. I. {Mostowski} and M. {Zaharieva-Stojanovski}},
         num_pages = {45},
            series = {Lecture Notes in Computer Science},
          keywords = {Software verification, concurrency, VerCors tool},
       ispublished = {Published},
            editor = {M. {Bernardo} and F. {Damiani} and R. {Hahnle} and E. {Johnsen} and I. {Schaefer}},
           address = {Berlin},
         publisher = {Springer Verlag},
         id_number = {10.1007/978-3-319-07317-0_5},
           isbn_13 = {978-3-319-07316-3},
      howpublished = {http://eprints.eemcs.utwente.nl/24905/},
            volume = {8483},
   research_groups = {EWI-FMT: Formal Methods and Tools},
         booktitle = {Formal Methods for Executable Software Models - 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems},
          refereed = {No},
  research_programs = {CTIT-DSN: Dependable Systems and Networks},
  research_projects = {VerCors: Verification of Concurrent Data Structures, CARP: Correct And Efficient Accelerator Programming},
             title = {Verification of concurrent systems with VerCors},
          abstract = {This paper presents the VerCors approach to verification of concurrent software. It first discusses why verification of concurrent software is important, but also challenging. Then it shows how within the VerCors project we use permission-based separation logic to reason about multithreaded Java programs. We discuss in particular how we use the logic to use different implementations of synchronisers in verification, and how we reason about class invariance properties in a concurrent setting. Further, we also show how the approach is suited to reason about programs using a different concurrency paradigm, namely kernel programs using the Single Instruction Multiple Data paradigm. Concretely, we illustrate how permission-based separation logic is suitable to verify functional correctness properties of OpenCL kernels. All verification techniques discussed in this paper are supported by the VerCors tool set.},
     international = {Yes},
              year = {2014},
             pages = {172--216}
}

@manual{PVSProverGuide,
	title = {PVS Prover Guide},
	author = {Shankar, N. and Owre, S. and Rushby, J.M. and Stringer-Calvert, D.W.J.},
	organization = {SRI International},
	address = {Computer Science Laboratory 333 Ravenswood Avenue Menlo Park CA 94025},
	edition = {2.4},
	year = {2001},
	month = {November},
	note = {http://pvs.csl.sri.com/},
}